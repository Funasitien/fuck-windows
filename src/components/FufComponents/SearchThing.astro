---
import { readAll } from "../../lib/markdoc/read";
import { blog } from "../../lib/markdoc/frontmatter.schema";

const posts = await readAll({
  directory: "blog",
  frontmatterSchema: blog,
});
---

<!-- The search bar input field -->
<div class="relative">
  <div
    class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="1em"
      height="1em"
      class="w-4 h-4 text-gray-500 dark:text-gray-400 ml-1"
      viewBox="0 0 48 48">
      <defs>
        <mask id="ipTSearch0">
          <g fill="none" stroke="#fff" stroke-linejoin="round" stroke-width="4">
            <path
              fill="#555"
              d="M21 38c9.389 0 17-7.611 17-17S30.389 4 21 4S4 11.611 4 21s7.611 17 17 17Z"
            ></path>
            <path
              stroke-linecap="round"
              d="M26.657 14.343A7.975 7.975 0 0 0 21 12a7.975 7.975 0 0 0-5.657 2.343m17.879 18.879l8.485 8.485"
            ></path>
          </g>
        </mask>
      </defs>
      <path fill="currentColor" d="M0 0h48v48H0z" mask="url(#ipTSearch0)"
      ></path>
    </svg>
  </div>

  <input
    type="text"
    id="search-input"
    placeholder="Search posts..."
    class="block w-full p-4 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
  />
</div>

<!-- The list of blog posts -->
<ul id="blog-posts">
  {
    posts.map((post) => {
      const formattedDate = new Date(post.frontmatter.date).toLocaleDateString(
        "en-us",
        {
          year: "numeric",
          month: "short",
          day: "numeric",
        }
      );
      return (
        <li
          class="grid grid-cols-[1fr] md:grid-cols-[1fr_auto] mb-3 md:gap-2 items-start"
          id={post.frontmatter.title}>
          <div class="title">
            {post.frontmatter.external ? (
              <a
                href={post.frontmatter.url}
                target="_blank"
                class="unset
                        transition-[background-size] duration-300 
                        bg-gradient-to-r bg-left-bottom bg-no-repeat
                        bg-[length:0%_55%] hover:bg-[length:100%_55%] dark:bg-[length:0%_2px] hover:dark:bg-[length:100%_2px]
                        from-primary-blue to-primary-blue dark:from-primary-blue dark:to-primary-blue
                      ">
                <span>{post.frontmatter.title}</span>
                <span>
                  <i class="ml-1 mr-1 text-[12px] pb-2 fa-solid fa-up-right-from-square" />
                </span>
              </a>
            ) : (
              <a
                href={`/blog/${post.slug}`}
                class="unset
                        transition-[background-size] duration-300 
                        bg-gradient-to-r bg-left-bottom bg-no-repeat
                        bg-[length:0%_55%] hover:bg-[length:100%_55%] dark:bg-[length:0%_2px] hover:dark:bg-[length:100%_2px]
                        from-primary-blue to-primary-blue dark:from-primary-blue dark:to-primary-blue
                      ">
                {post.frontmatter.title}
              </a>
            )}
          </div>
          <div class="text-text-muted text-sm italic pt-1">
            <time datetime={post.frontmatter.date.toISOString()}>
              {formattedDate}
            </time>
          </div>
        </li>
      );
    })
  }
</ul>

<!-- JavaScript to filter the blog posts based on the user's input -->
<script define:vars={{ posts }}>
  const searchInput = document.getElementById("search-input");
  const blogPostsList = document.getElementById("blog-posts");

  // Listen for input on the search bar
  searchInput.addEventListener("input", () => {
    const searchTerm = searchInput.value.toLowerCase();

    // Filter the blog posts based on the search term
    const filteredPosts = posts.filter((post) => {
      if (post.frontmatter.title.toLowerCase().includes(searchTerm)) {
        return true;
      }
      return false;
    });

    // Update the list of blog posts
    posts.forEach((post) => {
      if (!filteredPosts.includes(post)) {
        document.getElementById(post.frontmatter.title).style.display = "none";
      } else {
        document.getElementById(post.frontmatter.title).style.display = "block";
      }
    });
  });
</script>
